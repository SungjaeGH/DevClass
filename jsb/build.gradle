plugins {
    id 'java'
    id 'org.springframework.boot' version '3.4.0'
    id 'io.spring.dependency-management' version '1.1.6'
}

group = 'com.mysite'
version = '0.0.1-SNAPSHOT'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-web'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'

    /* [spring-boot-devtools]
    * 서버를 재시작 하지 않아도 클래스를 변경할 때, 서버가 자동으로 재가동
    * developmentOnly : 해당 라이브러리는 개발 환경에만 적용된다는 의미
    * */
    developmentOnly 'org.springframework.boot:spring-boot-devtools'

    // lombok
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'

    // h2
    runtimeOnly 'com.h2database:h2'

    // JPA
    // * implementation : 라이브러리와 연관된 모든 모듈을 컴파일 하지 않고 변경된 내용만 리빌딩
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'

    // JUnit
    testImplementation 'org.junit.jupiter:junit-jupiter'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

    // thymeleaf
    implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
    implementation 'nz.net.ultraq.thymeleaf:thymeleaf-layout-dialect'

    // validation
    implementation 'org.springframework.boot:spring-boot-starter-validation'

    // spring security
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.thymeleaf.extras:thymeleaf-extras-springsecurity6'
}

tasks.named('test') {
    useJUnitPlatform()
    jvmArgs '-Xshare:off' // JVM 아규먼트 설정
}
